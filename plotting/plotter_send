#!/usr/bin/env python3

import serial, argparse, sys
import hpgl

plotter_settings = {
    "titan" : {
        "baudrate": 38400,
        "xonxoff": True,
        "stopbits":serial.STOPBITS_ONE
    }
}

arg_parser = argparse.ArgumentParser(description="Send an HPGL file to a plotter.")
arg_parser.add_argument('--plotter', default='titan', choices=sorted(plotter_settings.keys()), type=str, help="choose plotter settings.")
arg_parser.add_argument('--dry-run', default=False, const=True, action='store_const', help="Print output to stdout instead of a serial port.")
arg_parser.add_argument('--mirror', default=False, const=True, action='store_const', help="Mirror the plot by flipping on the Y axis.")
arg_parser.add_argument('--separate', default=False, const=True, action='store_const', help="Attempts to separate pen from knife lines.")
arg_parser.add_argument('--repeat', type=int, help="Repeat the pattern REPEAT times.")
arg_parser.add_argument('port', type=str, help="The serial port the plotter is connected to.")
arg_parser.add_argument('file', type=str, help="The file of HPGL commands to send.")
args = arg_parser.parse_args()

chosen_plotter_settings = plotter_settings[args.plotter]

plot = hpgl.parse_file(args.file)

if args.mirror:
    plot.mirror()

out_port = sys.stdout if args.dry_run else serial.Serial(port=args.port, **chosen_plotter_settings)

out_port.write(str(plot))
